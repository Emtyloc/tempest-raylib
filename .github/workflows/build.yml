on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements*.txt

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Build Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: main.py
          windows-icon-from-ico: icon.ico
          onefile: true
          include-data-dir: assets=assets
          include-package-data: src.levels
          include-data-files: icon.png=icon.png
          windows-console-mode: disable
          onefile-no-compression: true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: |
            build/*.exe
            build/*.bin
            build/*.app/**/*

  release:
    needs: build  # Espera a que el trabajo de build termine
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.sha }}
          release_name: "Release ${{ github.sha }}"
          draft: false
          prerelease: false

      - name: Upload Windows Build
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/*.exe
          asset_name: windows_build.exe
          asset_content_type: application/octet-stream

      - name: Upload Linux Build
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/*.bin
          asset_name: linux_build.bin
          asset_content_type: application/octet-stream
